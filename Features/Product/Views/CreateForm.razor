@using Coffee_Ecommerce.WebApp.Features.Establishment
@using Coffee_Ecommerce.WebApp.Features.Product.Create
@using Coffee_Ecommerce.WebApp.Services
@using Coffee_Ecommerce.WebApp.Shared.Events
@using Coffee_Ecommerce.WebApp.Shared.Models
@inject IProductService ProductService
@inject CfeContext CfeContext

<EditForm Model="Request" OnValidSubmit="Create" FormName="create-product-form">
    <DataAnnotationsValidator />

    <label>Nome:</label>
    <ValidationMessage For="() => Request.Name" />
    <InputText @bind-Value="Request.Name" class="form-control"></InputText>
    <br />

    <label>Preço:</label>
    <ValidationMessage For="() => Request.Price" />
    <CurrencyInput @bind-Value="Request.Price" HideCurrencySymbol="true" TValue="float" class="form-control"></CurrencyInput>
    <br />

    <label>Descrição:</label>
    <ValidationMessage For="() => Request.Description" />
    <InputTextArea @bind-Value="Request.Description" class="form-control"></InputTextArea>
    <br />

    <div class="d-flex">
        <input type="submit" class="btn btn-success" style="margin-right: 10px;" value="Criar" />
        <Button Class="btn-primary" @onclick="CloseCallback">Voltar</Button>
    </div>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private CreateRequest Request { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> CloseCallback { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> ConfirmCallback { get; set; }

    protected override async Task OnInitializedAsync()
    {
        NewRequestModel();
    }

    private async Task Create()
    {
        try
        {
            _ = await ProductService.CreateAsync(Request);

            ToastRaiser.Notifty("Produto criado");
            NewRequestModel();

            await ConfirmCallback.InvokeAsync();
        }
        catch (ApiException ex)
        {
            ErrorRaiser.Raise(ex, "Não foi possível criar o produto");
        }
        catch (HttpRequestException ex)
        {
            ErrorRaiser.Raise($"{ex.GetType()}: Não foi possível criar o produto");
        }
    }

    private void NewRequestModel()
    {
        Request = new CreateRequest();
        Request.EstablishmentId = CfeContext.Establishment.Id;
    }
}
